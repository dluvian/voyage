{
  "formatVersion": 1,
  "database": {
    "version": 29,
    "identityHash": "8dcc23d1ede9b27d7dd3f9b44ecb510a",
    "entities": [
      {
        "tableName": "mainEvent",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `pubkey` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `content` TEXT NOT NULL, `relayUrl` TEXT NOT NULL, `isMentioningMe` INTEGER NOT NULL, `json` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "relayUrl",
            "columnName": "relayUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isMentioningMe",
            "columnName": "isMentioningMe",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "json",
            "columnName": "json",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_mainEvent_pubkey",
            "unique": false,
            "columnNames": [
              "pubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mainEvent_pubkey` ON `${TABLE_NAME}` (`pubkey`)"
          },
          {
            "name": "index_mainEvent_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mainEvent_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_mainEvent_isMentioningMe",
            "unique": false,
            "columnNames": [
              "isMentioningMe"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mainEvent_isMentioningMe` ON `${TABLE_NAME}` (`isMentioningMe`)"
          }
        ]
      },
      {
        "tableName": "rootPost",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventId` TEXT NOT NULL, `subject` TEXT NOT NULL, PRIMARY KEY(`eventId`), FOREIGN KEY(`eventId`) REFERENCES `mainEvent`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subject",
            "columnName": "subject",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "eventId"
          ]
        },
        "foreignKeys": [
          {
            "table": "mainEvent",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "eventId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "legacyReply",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventId` TEXT NOT NULL, `parentId` TEXT NOT NULL, PRIMARY KEY(`eventId`), FOREIGN KEY(`eventId`) REFERENCES `mainEvent`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "eventId"
          ]
        },
        "indices": [
          {
            "name": "index_legacyReply_parentId",
            "unique": false,
            "columnNames": [
              "parentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_legacyReply_parentId` ON `${TABLE_NAME}` (`parentId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "mainEvent",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "eventId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "comment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventId` TEXT NOT NULL, `parentId` TEXT, `parentKind` INTEGER, PRIMARY KEY(`eventId`), FOREIGN KEY(`eventId`) REFERENCES `mainEvent`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "parentKind",
            "columnName": "parentKind",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "eventId"
          ]
        },
        "indices": [
          {
            "name": "index_comment_parentId",
            "unique": false,
            "columnNames": [
              "parentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_comment_parentId` ON `${TABLE_NAME}` (`parentId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "mainEvent",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "eventId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "crossPost",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventId` TEXT NOT NULL, `crossPostedId` TEXT NOT NULL, PRIMARY KEY(`eventId`), FOREIGN KEY(`eventId`) REFERENCES `mainEvent`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "crossPostedId",
            "columnName": "crossPostedId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "eventId"
          ]
        },
        "indices": [
          {
            "name": "index_crossPost_crossPostedId",
            "unique": false,
            "columnNames": [
              "crossPostedId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_crossPost_crossPostedId` ON `${TABLE_NAME}` (`crossPostedId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "mainEvent",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "eventId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "hashtag",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventId` TEXT NOT NULL, `hashtag` TEXT NOT NULL, PRIMARY KEY(`eventId`, `hashtag`), FOREIGN KEY(`eventId`) REFERENCES `mainEvent`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hashtag",
            "columnName": "hashtag",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "eventId",
            "hashtag"
          ]
        },
        "foreignKeys": [
          {
            "table": "mainEvent",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "eventId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "vote",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `eventId` TEXT NOT NULL, `pubkey` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`eventId`, `pubkey`), FOREIGN KEY(`eventId`) REFERENCES `mainEvent`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "eventId",
            "pubkey"
          ]
        },
        "foreignKeys": [
          {
            "table": "mainEvent",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "eventId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "friend",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`myPubkey` TEXT NOT NULL, `friendPubkey` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`friendPubkey`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "friendPubkey",
            "columnName": "friendPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "friendPubkey"
          ]
        },
        "indices": [
          {
            "name": "index_friend_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_friend_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "weboftrust",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`friendPubkey` TEXT NOT NULL, `webOfTrustPubkey` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`webOfTrustPubkey`), FOREIGN KEY(`friendPubkey`) REFERENCES `friend`(`friendPubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "friendPubkey",
            "columnName": "friendPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "webOfTrustPubkey",
            "columnName": "webOfTrustPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "webOfTrustPubkey"
          ]
        },
        "indices": [
          {
            "name": "index_weboftrust_friendPubkey",
            "unique": false,
            "columnNames": [
              "friendPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_weboftrust_friendPubkey` ON `${TABLE_NAME}` (`friendPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "friend",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "friendPubkey"
            ],
            "referencedColumns": [
              "friendPubkey"
            ]
          }
        ]
      },
      {
        "tableName": "topic",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`myPubkey` TEXT NOT NULL, `topic` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`topic`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "topic",
            "columnName": "topic",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "topic"
          ]
        },
        "indices": [
          {
            "name": "index_topic_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_topic_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "nip65",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pubkey` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `url` TEXT NOT NULL, `isRead` INTEGER NOT NULL, `isWrite` INTEGER NOT NULL, PRIMARY KEY(`pubkey`, `url`))",
        "fields": [
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "nip65Relay.url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nip65Relay.isRead",
            "columnName": "isRead",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "nip65Relay.isWrite",
            "columnName": "isWrite",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pubkey",
            "url"
          ]
        }
      },
      {
        "tableName": "bookmark",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`myPubkey` TEXT NOT NULL, `eventId` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`eventId`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "eventId"
          ]
        },
        "indices": [
          {
            "name": "index_bookmark_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_bookmark_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "profileSet",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`identifier` TEXT NOT NULL, `myPubkey` TEXT NOT NULL, `title` TEXT NOT NULL, `description` TEXT NOT NULL DEFAULT '', `createdAt` INTEGER NOT NULL, `deleted` INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(`identifier`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "''"
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deleted",
            "columnName": "deleted",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "identifier"
          ]
        },
        "indices": [
          {
            "name": "index_profileSet_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_profileSet_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "profileSetItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`identifier` TEXT NOT NULL, `pubkey` TEXT NOT NULL, PRIMARY KEY(`identifier`, `pubkey`), FOREIGN KEY(`identifier`) REFERENCES `profileSet`(`identifier`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "identifier",
            "pubkey"
          ]
        },
        "foreignKeys": [
          {
            "table": "profileSet",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "identifier"
            ],
            "referencedColumns": [
              "identifier"
            ]
          }
        ]
      },
      {
        "tableName": "topicSet",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`identifier` TEXT NOT NULL, `myPubkey` TEXT NOT NULL, `title` TEXT NOT NULL, `description` TEXT NOT NULL DEFAULT '', `createdAt` INTEGER NOT NULL, `deleted` INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(`identifier`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "''"
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deleted",
            "columnName": "deleted",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "identifier"
          ]
        },
        "indices": [
          {
            "name": "index_topicSet_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_topicSet_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "topicSetItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`identifier` TEXT NOT NULL, `topic` TEXT NOT NULL, PRIMARY KEY(`identifier`, `topic`), FOREIGN KEY(`identifier`) REFERENCES `topicSet`(`identifier`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "topic",
            "columnName": "topic",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "identifier",
            "topic"
          ]
        },
        "foreignKeys": [
          {
            "table": "topicSet",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "identifier"
            ],
            "referencedColumns": [
              "identifier"
            ]
          }
        ]
      },
      {
        "tableName": "account",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pubkey` TEXT NOT NULL, `packageName` TEXT, PRIMARY KEY(`pubkey`))",
        "fields": [
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "packageName",
            "columnName": "packageName",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pubkey"
          ]
        }
      },
      {
        "tableName": "profile",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pubkey` TEXT NOT NULL, `name` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`pubkey`))",
        "fields": [
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pubkey"
          ]
        },
        "indices": [
          {
            "name": "index_profile_name",
            "unique": false,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_profile_name` ON `${TABLE_NAME}` (`name`)"
          }
        ]
      },
      {
        "tableName": "fullProfile",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pubkey` TEXT NOT NULL, `name` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `about` TEXT NOT NULL, `picture` TEXT NOT NULL, `lud06` TEXT NOT NULL, `lud16` TEXT NOT NULL, `nip05` TEXT NOT NULL, `displayName` TEXT NOT NULL, `website` TEXT NOT NULL, `banner` TEXT NOT NULL, PRIMARY KEY(`pubkey`), FOREIGN KEY(`pubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "about",
            "columnName": "about",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "picture",
            "columnName": "picture",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lud06",
            "columnName": "lud06",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lud16",
            "columnName": "lud16",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nip05",
            "columnName": "nip05",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "banner",
            "columnName": "banner",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pubkey"
          ]
        },
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "pubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      }
    ],
    "views": [
      {
        "viewName": "SimplePostView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mainEvent.id, mainEvent.pubkey, rootPost.subject, mainEvent.content, (SELECT EXISTS(SELECT * FROM account WHERE account.pubkey = mainEvent.pubkey)) AS authorIsOneself, (SELECT EXISTS(SELECT * FROM friend WHERE friend.friendPubkey = mainEvent.pubkey)) AS authorIsFriend, (SELECT EXISTS(SELECT * FROM weboftrust WHERE weboftrust.webOfTrustPubkey = mainEvent.pubkey)) AS authorIsTrusted, (SELECT EXISTS(SELECT * FROM profileSetItem WHERE profileSetItem.pubkey = mainEvent.pubkey)) AS authorIsInList FROM mainEvent LEFT JOIN rootPost ON rootPost.eventId = mainEvent.id"
      },
      {
        "viewName": "EventRelayAuthorView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mainEvent.pubkey, mainEvent.relayUrl, COUNT(*) AS relayCount FROM mainEvent GROUP BY mainEvent.pubkey, mainEvent.relayUrl"
      },
      {
        "viewName": "RootPostView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT \n            mainEvent.id, \n            mainEvent.pubkey, \n            rootPost.subject, \n            mainEvent.content, \n            mainEvent.createdAt, \n            mainEvent.relayUrl, \n            mainEvent.isMentioningMe, \n            profile.name AS authorName,\n            ht.min_hashtag AS myTopic,\n            CASE WHEN account.pubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsOneself,\n            CASE WHEN friend.friendPubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsFriend,\n            CASE WHEN weboftrust.webOfTrustPubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsTrusted,\n            CASE WHEN profileSetItem.pubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsInList,\n            CASE WHEN vote.eventId IS NOT NULL THEN 1 ELSE 0 END isUpvoted,\n            (SELECT EXISTS(SELECT * FROM bookmark WHERE bookmark.eventId = mainEvent.id)) AS isBookmarked \n        FROM rootPost\n        JOIN mainEvent ON mainEvent.id = rootPost.eventId\n        LEFT JOIN profile ON profile.pubkey = mainEvent.pubkey\n        LEFT JOIN (\n            SELECT DISTINCT hashtag.eventId, MIN(hashtag.hashtag) AS min_hashtag\n            FROM hashtag \n            JOIN topic ON hashtag.hashtag = topic.topic\n            WHERE topic.myPubkey = (SELECT pubkey FROM account LIMIT 1)\n            GROUP BY hashtag.eventId\n        ) AS ht ON ht.eventId = mainEvent.id\n        LEFT JOIN account ON account.pubkey = mainEvent.pubkey\n        LEFT JOIN friend ON friend.friendPubkey = mainEvent.pubkey\n        LEFT JOIN weboftrust ON weboftrust.webOfTrustPubkey = mainEvent.pubkey\n        LEFT JOIN profileSetItem ON profileSetItem.pubkey = mainEvent.pubkey\n        LEFT JOIN vote ON vote.eventId = mainEvent.id AND vote.pubkey = (SELECT pubkey FROM account LIMIT 1)"
      },
      {
        "viewName": "LegacyReplyView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mainEvent.id, legacyReply.parentId, mainEvent.pubkey, mainEvent.content, mainEvent.createdAt, mainEvent.relayUrl, mainEvent.isMentioningMe, (SELECT name FROM profile WHERE profile.pubkey = mainEvent.pubkey) AS authorName, (SELECT EXISTS(SELECT * FROM account WHERE account.pubkey = mainEvent.pubkey)) AS authorIsOneself, (SELECT EXISTS(SELECT * FROM friend WHERE friend.friendPubkey = mainEvent.pubkey)) AS authorIsFriend, (SELECT EXISTS(SELECT * FROM weboftrust WHERE weboftrust.webOfTrustPubkey = mainEvent.pubkey)) AS authorIsTrusted, (SELECT EXISTS(SELECT * FROM profileSetItem WHERE profileSetItem.pubkey = mainEvent.pubkey)) AS authorIsInList, (SELECT EXISTS(SELECT* FROM vote WHERE vote.eventId = mainEvent.id AND vote.pubkey = (SELECT pubkey FROM account LIMIT 1))) AS isUpvoted, (SELECT EXISTS(SELECT * FROM bookmark WHERE bookmark.eventId = mainEvent.id)) AS isBookmarked FROM legacyReply JOIN mainEvent ON mainEvent.id = legacyReply.eventId"
      },
      {
        "viewName": "CommentView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mainEvent.id, comment.parentId, comment.parentKind, mainEvent.pubkey, mainEvent.content, mainEvent.createdAt, mainEvent.relayUrl, mainEvent.isMentioningMe, (SELECT name FROM profile WHERE profile.pubkey = mainEvent.pubkey) AS authorName, (SELECT EXISTS(SELECT * FROM account WHERE account.pubkey = mainEvent.pubkey)) AS authorIsOneself, (SELECT EXISTS(SELECT * FROM friend WHERE friend.friendPubkey = mainEvent.pubkey)) AS authorIsFriend, (SELECT EXISTS(SELECT * FROM weboftrust WHERE weboftrust.webOfTrustPubkey = mainEvent.pubkey)) AS authorIsTrusted, (SELECT EXISTS(SELECT * FROM profileSetItem WHERE profileSetItem.pubkey = mainEvent.pubkey)) AS authorIsInList, (SELECT EXISTS(SELECT* FROM vote WHERE vote.eventId = mainEvent.id AND vote.pubkey = (SELECT pubkey FROM account LIMIT 1))) AS isUpvoted, (SELECT EXISTS(SELECT * FROM bookmark WHERE bookmark.eventId = mainEvent.id)) AS isBookmarked FROM comment JOIN mainEvent ON mainEvent.id = comment.eventId"
      },
      {
        "viewName": "CrossPostView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT \n            mainEvent.id, \n            mainEvent.pubkey, \n            crossPost.crossPostedId, \n            mainEvent.createdAt, \n            rootPost.subject AS crossPostedSubject, \n            crossPostedEvent.content AS crossPostedContent, \n            crossPostedEvent.relayUrl AS crossPostedRelayUrl, \n            crossPostedEvent.pubkey AS crossPostedPubkey, \n            profile.name AS authorName,\n            cross_posted_profile.name AS crossPostedAuthorName,\n            ht.min_hashtag AS myTopic,\n            CASE WHEN account.pubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsOneself,\n            CASE WHEN friend.friendPubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsFriend,\n            CASE WHEN weboftrust.webOfTrustPubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsTrusted,\n            CASE WHEN profileSetItem.pubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsInList,\n            CASE WHEN vote.eventId IS NOT NULL THEN 1 ELSE 0 END crossPostedIsUpvoted,\n            CASE WHEN cross_posted_account.pubkey IS NOT NULL THEN 1 ELSE 0 END AS crossPostedAuthorIsOneself,\n            CASE WHEN cross_posted_friend.friendPubkey IS NOT NULL THEN 1 ELSE 0 END AS crossPostedAuthorIsFriend,\n            CASE WHEN cross_posted_wot.webOfTrustPubkey IS NOT NULL THEN 1 ELSE 0 END AS crossPostedAuthorIsTrusted,\n            CASE WHEN cross_posted_profile_set_item.pubkey IS NOT NULL THEN 1 ELSE 0 END AS crossPostedAuthorIsInList,\n            (SELECT EXISTS(SELECT * FROM bookmark WHERE bookmark.eventId = crossPost.crossPostedId)) AS crossPostedIsBookmarked \n        FROM crossPost\n        JOIN mainEvent ON crossPost.eventId = mainEvent.id\n        JOIN mainEvent AS crossPostedEvent ON crossPost.crossPostedId = crossPostedEvent.id\n        LEFT JOIN profile ON profile.pubkey = mainEvent.pubkey\n        LEFT JOIN profile AS cross_posted_profile ON cross_posted_profile.pubkey = crossPostedEvent.pubkey\n        LEFT JOIN rootPost ON rootPost.eventId = crossPost.crossPostedId\n        LEFT JOIN (\n            SELECT DISTINCT hashtag.eventId, MIN(hashtag.hashtag) AS min_hashtag\n            FROM hashtag \n            JOIN topic ON hashtag.hashtag = topic.topic\n            WHERE topic.myPubkey = (SELECT pubkey FROM account LIMIT 1)\n            GROUP BY hashtag.eventId\n        ) AS ht ON ht.eventId = mainEvent.id\n        LEFT JOIN account ON account.pubkey = mainEvent.pubkey\n        LEFT JOIN friend ON friend.friendPubkey = mainEvent.pubkey\n        LEFT JOIN weboftrust ON weboftrust.webOfTrustPubkey = mainEvent.pubkey\n        LEFT JOIN profileSetItem ON profileSetItem.pubkey = mainEvent.pubkey\n        LEFT JOIN vote ON vote.eventId = crossPost.crossPostedId AND vote.pubkey = (SELECT pubkey FROM account LIMIT 1)\n        LEFT JOIN account AS cross_posted_account ON cross_posted_account.pubkey = crossPostedEvent.pubkey\n        LEFT JOIN friend AS cross_posted_friend ON cross_posted_friend.friendPubkey = crossPostedEvent.pubkey\n        LEFT JOIN weboftrust AS cross_posted_wot ON cross_posted_wot.webOfTrustPubkey = crossPostedEvent.pubkey\n        LEFT JOIN profileSetItem AS cross_posted_profile_set_item ON cross_posted_profile_set_item.pubkey = crossPostedEvent.pubkey"
      },
      {
        "viewName": "AdvancedProfileView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT profile.pubkey, profile.name,  (SELECT EXISTS(SELECT * FROM friend WHERE friend.friendPubkey = profile.pubkey)) AS isFriend, (SELECT EXISTS(SELECT * FROM weboftrust WHERE weboftrust.webOfTrustPubkey = profile.pubkey)) AS isWebOfTrust, (SELECT EXISTS(SELECT * FROM account WHERE account.pubkey = profile.pubkey)) AS isMe, (SELECT EXISTS(SELECT * FROM profileSetItem WHERE profileSetItem.pubkey = profile.pubkey)) AS isInList FROM profile"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '8dcc23d1ede9b27d7dd3f9b44ecb510a')"
    ]
  }
}